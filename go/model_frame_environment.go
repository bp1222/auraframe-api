/*
Aura Frame API - Unofficial

Reverse Engineered API for Aura Frames

API version: 0.0.1
Contact: dave@mudsite.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auraframes

import (
	"encoding/json"
)

// FrameEnvironment struct for FrameEnvironment
type FrameEnvironment struct {
	Id *string `json:"id,omitempty"`
	FrameId *string `json:"frame_id,omitempty"`
	LastOnlineAt *string `json:"last_online_at,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
}

// NewFrameEnvironment instantiates a new FrameEnvironment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFrameEnvironment() *FrameEnvironment {
	this := FrameEnvironment{}
	return &this
}

// NewFrameEnvironmentWithDefaults instantiates a new FrameEnvironment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFrameEnvironmentWithDefaults() *FrameEnvironment {
	this := FrameEnvironment{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *FrameEnvironment) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FrameEnvironment) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *FrameEnvironment) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *FrameEnvironment) SetId(v string) {
	o.Id = &v
}

// GetFrameId returns the FrameId field value if set, zero value otherwise.
func (o *FrameEnvironment) GetFrameId() string {
	if o == nil || o.FrameId == nil {
		var ret string
		return ret
	}
	return *o.FrameId
}

// GetFrameIdOk returns a tuple with the FrameId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FrameEnvironment) GetFrameIdOk() (*string, bool) {
	if o == nil || o.FrameId == nil {
		return nil, false
	}
	return o.FrameId, true
}

// HasFrameId returns a boolean if a field has been set.
func (o *FrameEnvironment) HasFrameId() bool {
	if o != nil && o.FrameId != nil {
		return true
	}

	return false
}

// SetFrameId gets a reference to the given string and assigns it to the FrameId field.
func (o *FrameEnvironment) SetFrameId(v string) {
	o.FrameId = &v
}

// GetLastOnlineAt returns the LastOnlineAt field value if set, zero value otherwise.
func (o *FrameEnvironment) GetLastOnlineAt() string {
	if o == nil || o.LastOnlineAt == nil {
		var ret string
		return ret
	}
	return *o.LastOnlineAt
}

// GetLastOnlineAtOk returns a tuple with the LastOnlineAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FrameEnvironment) GetLastOnlineAtOk() (*string, bool) {
	if o == nil || o.LastOnlineAt == nil {
		return nil, false
	}
	return o.LastOnlineAt, true
}

// HasLastOnlineAt returns a boolean if a field has been set.
func (o *FrameEnvironment) HasLastOnlineAt() bool {
	if o != nil && o.LastOnlineAt != nil {
		return true
	}

	return false
}

// SetLastOnlineAt gets a reference to the given string and assigns it to the LastOnlineAt field.
func (o *FrameEnvironment) SetLastOnlineAt(v string) {
	o.LastOnlineAt = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *FrameEnvironment) GetCreatedAt() string {
	if o == nil || o.CreatedAt == nil {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FrameEnvironment) GetCreatedAtOk() (*string, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *FrameEnvironment) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *FrameEnvironment) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *FrameEnvironment) GetUpdatedAt() string {
	if o == nil || o.UpdatedAt == nil {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FrameEnvironment) GetUpdatedAtOk() (*string, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *FrameEnvironment) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *FrameEnvironment) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

func (o FrameEnvironment) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.FrameId != nil {
		toSerialize["frame_id"] = o.FrameId
	}
	if o.LastOnlineAt != nil {
		toSerialize["last_online_at"] = o.LastOnlineAt
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableFrameEnvironment struct {
	value *FrameEnvironment
	isSet bool
}

func (v NullableFrameEnvironment) Get() *FrameEnvironment {
	return v.value
}

func (v *NullableFrameEnvironment) Set(val *FrameEnvironment) {
	v.value = val
	v.isSet = true
}

func (v NullableFrameEnvironment) IsSet() bool {
	return v.isSet
}

func (v *NullableFrameEnvironment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFrameEnvironment(val *FrameEnvironment) *NullableFrameEnvironment {
	return &NullableFrameEnvironment{value: val, isSet: true}
}

func (v NullableFrameEnvironment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFrameEnvironment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



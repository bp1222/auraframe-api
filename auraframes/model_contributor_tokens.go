/*
Aura Frame API - Unofficial

Reverse Engineered API for Aura Frames

API version: 0.0.1
Contact: dave@mudsite.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auraframes

import (
	"encoding/json"
)

// ContributorTokens struct for ContributorTokens
type ContributorTokens struct {
	Email *string `json:"email,omitempty"`
	PhoneNumber *string `json:"phone_number,omitempty"`
	ExpiresAt *string `json:"expires_at,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
	FrameId *string `json:"frame_id,omitempty"`
	ContributorName *string `json:"contributor_name,omitempty"`
}

// NewContributorTokens instantiates a new ContributorTokens object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContributorTokens() *ContributorTokens {
	this := ContributorTokens{}
	return &this
}

// NewContributorTokensWithDefaults instantiates a new ContributorTokens object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContributorTokensWithDefaults() *ContributorTokens {
	this := ContributorTokens{}
	return &this
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *ContributorTokens) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContributorTokens) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *ContributorTokens) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *ContributorTokens) SetEmail(v string) {
	o.Email = &v
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise.
func (o *ContributorTokens) GetPhoneNumber() string {
	if o == nil || o.PhoneNumber == nil {
		var ret string
		return ret
	}
	return *o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContributorTokens) GetPhoneNumberOk() (*string, bool) {
	if o == nil || o.PhoneNumber == nil {
		return nil, false
	}
	return o.PhoneNumber, true
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *ContributorTokens) HasPhoneNumber() bool {
	if o != nil && o.PhoneNumber != nil {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given string and assigns it to the PhoneNumber field.
func (o *ContributorTokens) SetPhoneNumber(v string) {
	o.PhoneNumber = &v
}

// GetExpiresAt returns the ExpiresAt field value if set, zero value otherwise.
func (o *ContributorTokens) GetExpiresAt() string {
	if o == nil || o.ExpiresAt == nil {
		var ret string
		return ret
	}
	return *o.ExpiresAt
}

// GetExpiresAtOk returns a tuple with the ExpiresAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContributorTokens) GetExpiresAtOk() (*string, bool) {
	if o == nil || o.ExpiresAt == nil {
		return nil, false
	}
	return o.ExpiresAt, true
}

// HasExpiresAt returns a boolean if a field has been set.
func (o *ContributorTokens) HasExpiresAt() bool {
	if o != nil && o.ExpiresAt != nil {
		return true
	}

	return false
}

// SetExpiresAt gets a reference to the given string and assigns it to the ExpiresAt field.
func (o *ContributorTokens) SetExpiresAt(v string) {
	o.ExpiresAt = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ContributorTokens) GetCreatedAt() string {
	if o == nil || o.CreatedAt == nil {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContributorTokens) GetCreatedAtOk() (*string, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ContributorTokens) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *ContributorTokens) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *ContributorTokens) GetUpdatedAt() string {
	if o == nil || o.UpdatedAt == nil {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContributorTokens) GetUpdatedAtOk() (*string, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ContributorTokens) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *ContributorTokens) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetFrameId returns the FrameId field value if set, zero value otherwise.
func (o *ContributorTokens) GetFrameId() string {
	if o == nil || o.FrameId == nil {
		var ret string
		return ret
	}
	return *o.FrameId
}

// GetFrameIdOk returns a tuple with the FrameId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContributorTokens) GetFrameIdOk() (*string, bool) {
	if o == nil || o.FrameId == nil {
		return nil, false
	}
	return o.FrameId, true
}

// HasFrameId returns a boolean if a field has been set.
func (o *ContributorTokens) HasFrameId() bool {
	if o != nil && o.FrameId != nil {
		return true
	}

	return false
}

// SetFrameId gets a reference to the given string and assigns it to the FrameId field.
func (o *ContributorTokens) SetFrameId(v string) {
	o.FrameId = &v
}

// GetContributorName returns the ContributorName field value if set, zero value otherwise.
func (o *ContributorTokens) GetContributorName() string {
	if o == nil || o.ContributorName == nil {
		var ret string
		return ret
	}
	return *o.ContributorName
}

// GetContributorNameOk returns a tuple with the ContributorName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContributorTokens) GetContributorNameOk() (*string, bool) {
	if o == nil || o.ContributorName == nil {
		return nil, false
	}
	return o.ContributorName, true
}

// HasContributorName returns a boolean if a field has been set.
func (o *ContributorTokens) HasContributorName() bool {
	if o != nil && o.ContributorName != nil {
		return true
	}

	return false
}

// SetContributorName gets a reference to the given string and assigns it to the ContributorName field.
func (o *ContributorTokens) SetContributorName(v string) {
	o.ContributorName = &v
}

func (o ContributorTokens) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	if o.PhoneNumber != nil {
		toSerialize["phone_number"] = o.PhoneNumber
	}
	if o.ExpiresAt != nil {
		toSerialize["expires_at"] = o.ExpiresAt
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if o.FrameId != nil {
		toSerialize["frame_id"] = o.FrameId
	}
	if o.ContributorName != nil {
		toSerialize["contributor_name"] = o.ContributorName
	}
	return json.Marshal(toSerialize)
}

type NullableContributorTokens struct {
	value *ContributorTokens
	isSet bool
}

func (v NullableContributorTokens) Get() *ContributorTokens {
	return v.value
}

func (v *NullableContributorTokens) Set(val *ContributorTokens) {
	v.value = val
	v.isSet = true
}

func (v NullableContributorTokens) IsSet() bool {
	return v.isSet
}

func (v *NullableContributorTokens) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContributorTokens(val *ContributorTokens) *NullableContributorTokens {
	return &NullableContributorTokens{value: val, isSet: true}
}

func (v NullableContributorTokens) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContributorTokens) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



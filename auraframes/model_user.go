/*
Aura Frame API - Unofficial

Reverse Engineered API for Aura Frames

API version: 0.0.1
Contact: dave@mudsite.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auraframes

import (
	"encoding/json"
)

// User struct for User
type User struct {
	Id *string `json:"id,omitempty"`
	ShortId *string `json:"short_id,omitempty"`
	TestAccount *string `json:"test_account,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
	LatestAppVersion *string `json:"latest_app_version,omitempty"`
	Name *string `json:"name,omitempty"`
	Email *string `json:"email,omitempty"`
	AttributionId *string `json:"attribution_id,omitempty"`
	AttributionString *string `json:"attribution_string,omitempty"`
	ShowPushPrompt *bool `json:"show_push_prompt,omitempty"`
	AvatarFileName *string `json:"avatar_file_name,omitempty"`
}

// NewUser instantiates a new User object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUser() *User {
	this := User{}
	return &this
}

// NewUserWithDefaults instantiates a new User object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserWithDefaults() *User {
	this := User{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *User) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *User) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *User) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *User) SetId(v string) {
	o.Id = &v
}

// GetShortId returns the ShortId field value if set, zero value otherwise.
func (o *User) GetShortId() string {
	if o == nil || o.ShortId == nil {
		var ret string
		return ret
	}
	return *o.ShortId
}

// GetShortIdOk returns a tuple with the ShortId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *User) GetShortIdOk() (*string, bool) {
	if o == nil || o.ShortId == nil {
		return nil, false
	}
	return o.ShortId, true
}

// HasShortId returns a boolean if a field has been set.
func (o *User) HasShortId() bool {
	if o != nil && o.ShortId != nil {
		return true
	}

	return false
}

// SetShortId gets a reference to the given string and assigns it to the ShortId field.
func (o *User) SetShortId(v string) {
	o.ShortId = &v
}

// GetTestAccount returns the TestAccount field value if set, zero value otherwise.
func (o *User) GetTestAccount() string {
	if o == nil || o.TestAccount == nil {
		var ret string
		return ret
	}
	return *o.TestAccount
}

// GetTestAccountOk returns a tuple with the TestAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *User) GetTestAccountOk() (*string, bool) {
	if o == nil || o.TestAccount == nil {
		return nil, false
	}
	return o.TestAccount, true
}

// HasTestAccount returns a boolean if a field has been set.
func (o *User) HasTestAccount() bool {
	if o != nil && o.TestAccount != nil {
		return true
	}

	return false
}

// SetTestAccount gets a reference to the given string and assigns it to the TestAccount field.
func (o *User) SetTestAccount(v string) {
	o.TestAccount = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *User) GetCreatedAt() string {
	if o == nil || o.CreatedAt == nil {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *User) GetCreatedAtOk() (*string, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *User) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *User) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *User) GetUpdatedAt() string {
	if o == nil || o.UpdatedAt == nil {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *User) GetUpdatedAtOk() (*string, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *User) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *User) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetLatestAppVersion returns the LatestAppVersion field value if set, zero value otherwise.
func (o *User) GetLatestAppVersion() string {
	if o == nil || o.LatestAppVersion == nil {
		var ret string
		return ret
	}
	return *o.LatestAppVersion
}

// GetLatestAppVersionOk returns a tuple with the LatestAppVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *User) GetLatestAppVersionOk() (*string, bool) {
	if o == nil || o.LatestAppVersion == nil {
		return nil, false
	}
	return o.LatestAppVersion, true
}

// HasLatestAppVersion returns a boolean if a field has been set.
func (o *User) HasLatestAppVersion() bool {
	if o != nil && o.LatestAppVersion != nil {
		return true
	}

	return false
}

// SetLatestAppVersion gets a reference to the given string and assigns it to the LatestAppVersion field.
func (o *User) SetLatestAppVersion(v string) {
	o.LatestAppVersion = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *User) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *User) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *User) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *User) SetName(v string) {
	o.Name = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *User) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *User) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *User) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *User) SetEmail(v string) {
	o.Email = &v
}

// GetAttributionId returns the AttributionId field value if set, zero value otherwise.
func (o *User) GetAttributionId() string {
	if o == nil || o.AttributionId == nil {
		var ret string
		return ret
	}
	return *o.AttributionId
}

// GetAttributionIdOk returns a tuple with the AttributionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *User) GetAttributionIdOk() (*string, bool) {
	if o == nil || o.AttributionId == nil {
		return nil, false
	}
	return o.AttributionId, true
}

// HasAttributionId returns a boolean if a field has been set.
func (o *User) HasAttributionId() bool {
	if o != nil && o.AttributionId != nil {
		return true
	}

	return false
}

// SetAttributionId gets a reference to the given string and assigns it to the AttributionId field.
func (o *User) SetAttributionId(v string) {
	o.AttributionId = &v
}

// GetAttributionString returns the AttributionString field value if set, zero value otherwise.
func (o *User) GetAttributionString() string {
	if o == nil || o.AttributionString == nil {
		var ret string
		return ret
	}
	return *o.AttributionString
}

// GetAttributionStringOk returns a tuple with the AttributionString field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *User) GetAttributionStringOk() (*string, bool) {
	if o == nil || o.AttributionString == nil {
		return nil, false
	}
	return o.AttributionString, true
}

// HasAttributionString returns a boolean if a field has been set.
func (o *User) HasAttributionString() bool {
	if o != nil && o.AttributionString != nil {
		return true
	}

	return false
}

// SetAttributionString gets a reference to the given string and assigns it to the AttributionString field.
func (o *User) SetAttributionString(v string) {
	o.AttributionString = &v
}

// GetShowPushPrompt returns the ShowPushPrompt field value if set, zero value otherwise.
func (o *User) GetShowPushPrompt() bool {
	if o == nil || o.ShowPushPrompt == nil {
		var ret bool
		return ret
	}
	return *o.ShowPushPrompt
}

// GetShowPushPromptOk returns a tuple with the ShowPushPrompt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *User) GetShowPushPromptOk() (*bool, bool) {
	if o == nil || o.ShowPushPrompt == nil {
		return nil, false
	}
	return o.ShowPushPrompt, true
}

// HasShowPushPrompt returns a boolean if a field has been set.
func (o *User) HasShowPushPrompt() bool {
	if o != nil && o.ShowPushPrompt != nil {
		return true
	}

	return false
}

// SetShowPushPrompt gets a reference to the given bool and assigns it to the ShowPushPrompt field.
func (o *User) SetShowPushPrompt(v bool) {
	o.ShowPushPrompt = &v
}

// GetAvatarFileName returns the AvatarFileName field value if set, zero value otherwise.
func (o *User) GetAvatarFileName() string {
	if o == nil || o.AvatarFileName == nil {
		var ret string
		return ret
	}
	return *o.AvatarFileName
}

// GetAvatarFileNameOk returns a tuple with the AvatarFileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *User) GetAvatarFileNameOk() (*string, bool) {
	if o == nil || o.AvatarFileName == nil {
		return nil, false
	}
	return o.AvatarFileName, true
}

// HasAvatarFileName returns a boolean if a field has been set.
func (o *User) HasAvatarFileName() bool {
	if o != nil && o.AvatarFileName != nil {
		return true
	}

	return false
}

// SetAvatarFileName gets a reference to the given string and assigns it to the AvatarFileName field.
func (o *User) SetAvatarFileName(v string) {
	o.AvatarFileName = &v
}

func (o User) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.ShortId != nil {
		toSerialize["short_id"] = o.ShortId
	}
	if o.TestAccount != nil {
		toSerialize["test_account"] = o.TestAccount
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if o.LatestAppVersion != nil {
		toSerialize["latest_app_version"] = o.LatestAppVersion
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	if o.AttributionId != nil {
		toSerialize["attribution_id"] = o.AttributionId
	}
	if o.AttributionString != nil {
		toSerialize["attribution_string"] = o.AttributionString
	}
	if o.ShowPushPrompt != nil {
		toSerialize["show_push_prompt"] = o.ShowPushPrompt
	}
	if o.AvatarFileName != nil {
		toSerialize["avatar_file_name"] = o.AvatarFileName
	}
	return json.Marshal(toSerialize)
}

type NullableUser struct {
	value *User
	isSet bool
}

func (v NullableUser) Get() *User {
	return v.value
}

func (v *NullableUser) Set(val *User) {
	v.value = val
	v.isSet = true
}

func (v NullableUser) IsSet() bool {
	return v.isSet
}

func (v *NullableUser) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUser(val *User) *NullableUser {
	return &NullableUser{value: val, isSet: true}
}

func (v NullableUser) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUser) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


